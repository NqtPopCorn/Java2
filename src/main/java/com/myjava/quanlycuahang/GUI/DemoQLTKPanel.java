package com.myjava.quanlycuahang.GUI;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

 import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
 import java.util.Vector;
 
 import javax.swing.JDialog;
 import javax.swing.JFileChooser;
 import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
 import javax.swing.table.DefaultTableColumnModel;
 import javax.swing.table.DefaultTableModel;
 import javax.swing.table.TableCellRenderer;
 import javax.swing.table.TableColumn;
 import javax.swing.table.TableModel;

import com.myjava.quanlycuahang.BUS.Constant;
import com.myjava.quanlycuahang.BUS.TaiKhoanBUS;
import com.myjava.quanlycuahang.DTO.TaiKhoanDTO;
 
 /**
  *
  * @author truon
  */
 public class DemoQLTKPanel extends javax.swing.JPanel {
 
     /**
      * Creates new form DemoQLTKPanel
      */
     public DemoQLTKPanel() {
         initComponents();
         updateComponents();
     }
 
     public DemoQLTKPanel(JFrame frame) {
         initComponents();
         updateComponents();
         this.pFrame = frame;
     }
 
     /**
      * This method is called from within the constructor to initialize the form.
      * WARNING: Do NOT modify this code. The content of this method is always
      * regenerated by the Form Editor.
      */
     @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        chucNangPanel = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXuatExcel = new javax.swing.JButton();
        btnNhapExcel = new javax.swing.JButton();
        btnLock = new javax.swing.JButton();
        timkiemPanel = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        cbFiled = new javax.swing.JComboBox<>();
        txtField = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        tbScrollPane = new javax.swing.JScrollPane();
        tbTaiKhoan = new javax.swing.JTable();

        setMaximumSize(null);

        title.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        title.setText("Quản lý tài khoản");

        chucNangPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        btnThem.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemMouseClicked(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuaMouseClicked(evt);
            }
        });

        btnXuatExcel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnXuatExcel.setText("Xuất Excel");
        btnXuatExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXuatExcelMouseClicked(evt);
            }
        });

        btnNhapExcel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnNhapExcel.setText("Nhập Excel");
        btnNhapExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNhapExcelMouseClicked(evt);
            }
        });

        btnLock.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnLock.setText("Khóa");
        btnLock.setFocusPainted(false);
        btnLock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chucNangPanelLayout = new javax.swing.GroupLayout(chucNangPanel);
        chucNangPanel.setLayout(chucNangPanelLayout);
        chucNangPanelLayout.setHorizontalGroup(
            chucNangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chucNangPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLock, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnNhapExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(btnXuatExcel)
                .addGap(7, 7, 7))
        );
        chucNangPanelLayout.setVerticalGroup(
            chucNangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chucNangPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(chucNangPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnNhapExcel)
                    .addComponent(btnXuatExcel)
                    .addComponent(btnLock))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        timkiemPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        timkiemPanel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        btnReset.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });

        cbFiled.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        txtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFieldKeyPressed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnTimKiem.setText("Tìm");
        btnTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout timkiemPanelLayout = new javax.swing.GroupLayout(timkiemPanel);
        timkiemPanel.setLayout(timkiemPanelLayout);
        timkiemPanelLayout.setHorizontalGroup(
            timkiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timkiemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbFiled, 0, 128, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtField, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset))
        );
        timkiemPanelLayout.setVerticalGroup(
            timkiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timkiemPanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(timkiemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem)
                    .addComponent(btnReset))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(chucNangPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timkiemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chucNangPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(timkiemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tbTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTaiKhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTaiKhoanMouseClicked(evt);
            }
        });
        tbScrollPane.setViewportView(tbTaiKhoan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tbScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1133, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(479, 479, 479)
                        .addComponent(title)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents
 
    private void btnThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseClicked
        // TODO add your handling code here:
        //tao them dialog va kiem tra ket qua tra ve
        ThemJDialog dialog = new ThemJDialog(pFrame, true);
        if (dialog.update_result) {
            updateComponents();
        }
    }//GEN-LAST:event_btnThemMouseClicked

    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this.pFrame, "Bạn có chắc chắn muốn xóa tài khoản này không?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            int row = tbTaiKhoan.getSelectedRow();
            if (row == -1) {
                return;
            }
            TaiKhoanDTO tk = TaiKhoanBUS.getInstance().getList().get(row);
            try {
                int rs = TaiKhoanBUS.getInstance().xoa(tk.getMatk());
                if (rs == 1) {
                    JOptionPane.showMessageDialog(this.pFrame, "Xóa tài khoản thành công", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                    updateComponents();
                }
            } catch(SQLException e) {
                JOptionPane.showMessageDialog(this.pFrame, "Xóa tài khoản thất bại do lỗi CSDL:\n"+e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnXoaMouseClicked

    private void btnSuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseClicked
        // TODO add your handling code here:
        // new SuaJDialog(pFrame, true);
        int row = tbTaiKhoan.getSelectedRow();
        if (row == -1) {
            return;
        }
        TaiKhoanDTO tk = TaiKhoanBUS.getInstance().getList().get(row);
        SuaJDialog dialog = new SuaJDialog(pFrame, true, tk);
        if (dialog.update_result) {
            updateComponents();
        }
    }//GEN-LAST:event_btnSuaMouseClicked

    private void btnNhapExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNhapExcelMouseClicked
    // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setCurrentDirectory(new File("testExcel.xlsx"));
        fileChooser.setSelectedFile(new File("testExcel.xlsx"));
        int returnValue = fileChooser.showSaveDialog(null); 
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            String extension = "";
            int i = path.lastIndexOf('.');
            if (i > 0) {
                extension = path.substring(i+1);
            }

            if ("xls".equals(extension) || "xlsx".equals(extension)) {
                //ghi file excel tai day
                try {
                    TaiKhoanBUS.getInstance().nhapTuFileExcel(path);
                    updateComponents();
                    JOptionPane.showMessageDialog(this.pFrame, "Nhập file Excel thành công", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this.pFrame, "Nhập file Excel thất bại do lỗi:\n"+e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this.pFrame, "Vui lòng chọn file .xsl hoặc .xlsx:\n", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnNhapExcelMouseClicked

    private void btnXuatExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatExcelMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setCurrentDirectory(new File("testExcel.xlsx"));
        fileChooser.setSelectedFile(new File("testExcel.xlsx"));
        int returnValue = fileChooser.showSaveDialog(null); 
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            String extension = "";
            int i = path.lastIndexOf('.');
            if (i > 0) {
                extension = path.substring(i+1);
            }

            if ("xls".equals(extension) || "xlsx".equals(extension)) {
                //ghi file excel tai day
                try {
                    TaiKhoanBUS.getInstance().xuatFileExcel(path);
                    JOptionPane.showMessageDialog(this.pFrame, "Xuất file Excel thành công", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this.pFrame, "Xuất file Excel thất bại do lỗi:\n"+e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this.pFrame, "Vui lòng chọn file .xsl hoặc .xlsx:\n", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
        

        //tao frame bao gom mot textfield va mot nut browse, nut xac nhan, nut huy
        //khi nhan nut browse, mo cua so chon file, chon file xuat excel

    }//GEN-LAST:event_btnXuatExcelMouseClicked

    private void btnTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseClicked
        // TODO add your handling code here:
        MyComboboxItem item = (MyComboboxItem)cbFiled.getSelectedItem();
        String value = txtField.getText().trim();
        System.out.println(value);
        ArrayList<TaiKhoanDTO> listTK = TaiKhoanBUS.getInstance().loc(item.getValue(), value);
        tableModel.setRowCount(0);
        for (TaiKhoanDTO tk: listTK) {
            System.out.println(tk.getUsername());
            Vector<String> row = new Vector<>();
            row.add(tk.getMatk()+"");
            row.add(tk.getUsername());
            row.add(tk.getMatkhau());
            row.add(tk.getTrangthai() == 1 ? "Mở" : "Khóa");
            row.add(tk.getTenVaiTro() + "");
            tableModel.addRow(row);
        }
        tbTaiKhoan.setModel(tableModel);

    }//GEN-LAST:event_btnTimKiemMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        // TODO add your handling code here:
        //print all data
        updateComponents();
        txtField.setText("");

    }//GEN-LAST:event_btnResetMouseClicked

    private void tbTaiKhoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTaiKhoanMouseClicked
        // TODO add your handling code here:
        int row = tbTaiKhoan.getSelectedRow();
        if (row == -1) {
            return;
        }
        if (evt.getClickCount() == 2) {
            TaiKhoanDTO tk = TaiKhoanBUS.getInstance().getList().get(row);
            new SuaJDialog(pFrame, true, tk);
        }
        if (TaiKhoanBUS.getInstance().getList().get(row).getTrangthai() == 0) {
            btnLock.setText("Mở khóa");
        }
        else if (TaiKhoanBUS.getInstance().getList().get(row).getTrangthai() == 1) {
            btnLock.setText("Khóa");
        }
    }//GEN-LAST:event_tbTaiKhoanMouseClicked

    private void btnLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLockActionPerformed
        // TODO add your handling code here:
        int row = tbTaiKhoan.getSelectedRow();
        try {
            TaiKhoanBUS.getInstance().toggle_lock(row);
            if (btnLock.getText().equals("Khóa")) {
                btnLock.setText("Mở khóa");
            }
            else {
                btnLock.setText("Khóa");
            }
            //update trang thai trong table voi data dang hien thi
            ((Vector)tableModel.getDataVector().get(row)).set(3, TaiKhoanBUS.getInstance().getList().get(row).getTrangthai() == 1 ? "Mở" : "Khóa");
            tableModel.fireTableDataChanged();
            //giu lai dong dang chon
            tbTaiKhoan.setRowSelectionInterval(row, row);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.pFrame, "Khóa tài khoản thất bại do lỗi:\n"+e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnLockActionPerformed

    private void txtFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnTimKiemMouseClicked(null);
        }
    }//GEN-LAST:event_txtFieldKeyPressed

    public void updateComponents() {
        //display data in table
        Vector<String> header = new Vector<>();
        header.add("Mã tài khoản");
        header.add("Tên đăng nhập");
        header.add("Mật khẩu mã hóa");
        header.add("Trạng thái");
        header.add("Tên vai trò");
        tableModel = new DefaultTableModel(null, header)
        {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        tbTaiKhoan.setModel(tableModel);
        for (TaiKhoanDTO tk: TaiKhoanBUS.getInstance().getList()) {
            Vector<String> row = new Vector<>();
            row.add(tk.getMatk()+"");
            row.add(tk.getUsername());
            row.add(tk.getMatkhau());
            row.add(tk.getTrangthai() == 1 ? "Mở" : "Khóa");
            row.add(tk.getTenVaiTro() + "");
            tableModel.addRow(row);
        }

        tbTaiKhoan.setRowHeight(24);
        tbTaiKhoan.getTableHeader().setFont(new java.awt.Font("Arial", 1, 14));
        TableColumn column = null;
        for (int i = 0; i < 4; i++) {
            column = tbTaiKhoan.getColumnModel().getColumn(i);
            DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
            cellRenderer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            column.setCellRenderer(cellRenderer);
            if (i == 2) {
                column.setPreferredWidth(200);
            } else {
                column.setPreferredWidth(40);
            }
        }
 
        //display data in combobox
        cbFiled.removeAllItems();
        cbFiled.addItem(new MyComboboxItem("Tên đăng nhập", Constant.TaiKhoan.TENDANGNHAP));
        cbFiled.addItem(new MyComboboxItem("Trạng thái", Constant.TaiKhoan.TRANGTHAI));
        cbFiled.addItem(new MyComboboxItem("Tên vai trò", Constant.TaiKhoan.TENVAITRO));
        
        
     }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLock;
    private javax.swing.JButton btnNhapExcel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.JComboBox<MyComboboxItem> cbFiled;
    private javax.swing.JPanel chucNangPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane tbScrollPane;
    private javax.swing.JTable tbTaiKhoan;
    private javax.swing.JPanel timkiemPanel;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtField;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel tableModel;
    private JFrame pFrame;
     
     public static void main(String args[]) {
        JFrame frame = new JFrame("Demo QLTK Panel");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1170, 800);
        frame.setLocationRelativeTo(null);
        frame.add(new DemoQLTKPanel(frame));
        frame.setVisible(true);
     }
 }